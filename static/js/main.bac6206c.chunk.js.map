{"version":3,"sources":["components/Header.tsx","components/AboutMe.tsx","components/Skills.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","link","textDecoration","color","Header","props","classes","className","AppBar","position","Toolbar","Typography","variant","noWrap","to","Button","H2","withStyles","h2","fontSize","AboutMe","StyledTableContainer","width","TableCell","CellLang","head","backgroundColor","palette","common","white","black","body","CellExpYear","CellLevel","textAlign","StyledTableRow","action","hover","TableRow","rows","table","minWidth","Skills","component","Paper","Table","aria-label","TableHead","align","TableBody","map","row","key","Main","main","Container","Box","my","path","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bac6206c.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    link: {\n      textDecoration: \"none\",\n      color: \"white\",\n    },\n  })\n);\n\nconst Header: React.FC = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Teshima's portfolio\n          </Typography>\n\n          <Link to=\"/aboutme\" className={classes.link}>\n            <Button color=\"inherit\">about me</Button>\n          </Link>\n          <Link to=\"/skills\" className={classes.link}>\n            <Button color=\"inherit\">skills</Button>\n          </Link>\n          <Link to=\"/work\" className={classes.link}>\n            <Button color=\"inherit\">work</Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from \"@material-ui/core/styles\";\n\nimport { Typography } from \"@material-ui/core\";\n\nconst H2 = withStyles((theme: Theme) =>\n  createStyles({\n    h2: {\n      fontSize: \"24px\",\n    },\n  })\n)(Typography);\n\nconst AboutMe: React.FC = () => {\n  return (\n    <>\n      <H2 variant=\"h2\">略歴</H2>\n      <Typography variant=\"body1\">\n        広島の大学院卒業後、東京の大手SIerに就職して8年目\n      </Typography>\n    </>\n  );\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableContainer = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"80%\",\n    },\n  })\n)(TableCell);\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst CellLang = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black,\n      width: \"10%\",\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst CellExpYear = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black,\n      width: \"20%\",\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst CellLevel = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black,\n    },\n    body: {\n      fontSize: 14,\n      textAlign: \"left\",\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n\n// 言語(string)、年数(int)、レベル(string)\nconst langs = [\n  [\"php\", 3, \"aaa\"],\n  [\"javascipt\", 3, \"aaa\"],\n  [\"ruby\", 3, \"aaa\"],\n  [\"python\", 3, \"aaa\"],\n  [\n    \"VBA\",\n    2,\n    \"業務用ツールとして、webスクレイピングツールを作成し、WEBテスト自動化等、担当内の工数削減を実現\",\n  ],\n];\n\nconst rows = [\n  [\n    \"PHP\",\n    5,\n    `フレームワーク（FuelPHP,CodeIgniter）を使用し、\n  キュレーションサービスのバックエンドを作成可能。また、\n  PurePHPを用いてフルスクラッチでSNSを作成した経験あり`,\n  ],\n  [\n    \"Ruby\",\n    3,\n    `フレームワーク（Ruby on Rails）を使用しキュレーションサービスのバックエンドを作成可能。\n  また、Webスクレイピングによる情報収集等も可能`,\n  ],\n  [\n    \"JavaScript\",\n    1,\n    `React, jQueryを用いた簡易なWebサイト構築可能。\n  また、Ruby on Railsをバックエンドとして開発も経験\n  `,\n  ],\n  [\n    \"VBA\",\n    3,\n    `Seleniumが使用不可能な環境で、社内のWebテスト自動化ツールを作成\n  社内の誰もが使用可能となるよう、Excelでミニ言語を作成し、簡易にシナリオ作成を可能とした。\n  また、社内向けの定常作業の自動化も多く実装し、全体の工数削減に貢献`,\n  ],\n];\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nconst Skills: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <h2>スキル</h2>\n      <StyledTableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <CellLang align=\"right\">言語</CellLang>\n              <CellExpYear align=\"right\">経験年数</CellExpYear>\n              <CellLevel align=\"right\">レベル</CellLevel>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <StyledTableRow key={row[0]}>\n                <CellLang align=\"right\">{row[0]}</CellLang>\n                <CellExpYear align=\"right\">{row[1]}</CellExpYear>\n                <CellLevel align=\"right\">{row[2]}</CellLevel>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </StyledTableContainer>\n    </>\n  );\n};\n\nexport default Skills;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport { Route } from \"react-router-dom\";\nimport AboutMe from \"./AboutMe\";\nimport Skills from \"./Skills\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      flexGrow: 1,\n    },\n  })\n);\n\nconst Main: React.FC = () => {\n  return (\n    <Container>\n      <Box my={2}>\n        this is main contents teshima's portfolio 現在、作成中です。\n      </Box>\n      <Route path=\"/aboutme\" component={AboutMe}></Route>\n      <Route path=\"/skills\" component={Skills}></Route>\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Main from \"./components/Main\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <CssBaseline />\n        <Header />\n        <Toolbar />\n        <Main />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}